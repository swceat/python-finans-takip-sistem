from PyQt5.QtWidgets import (QMainWindow, QWidget, QVBoxLayout, QHBoxLayout, QLabel,
                            QPushButton, QDateEdit, QMessageBox, QComboBox,
                            QApplication, QTableWidget, QTableWidgetItem, QHeaderView)
from PyQt5.QtCore import Qt, QDate
from PyQt5.QtGui import QPainter, QPdfWriter, QTextDocument
import os

class IncomeStatementReport(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle('Gelir Tablosu Raporu')
        self.setWindowFlags(Qt.FramelessWindowHint)
        self.setWindowState(Qt.WindowMaximized)
        self.setStyleSheet('background-color: #FFF5E6;')
        
        # Ana widget ve layout
        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        layout = QVBoxLayout(central_widget)
        layout.setContentsMargins(0, 0, 0, 0)
        layout.setSpacing(0)
        
        # Ba≈ülƒ±k √ßubuƒüu
        title_bar = QWidget()
        title_bar.setFixedHeight(60)
        title_bar.setStyleSheet('background-color: #D94E1F;')
        title_layout = QHBoxLayout(title_bar)
        title_layout.setContentsMargins(20, 0, 20, 0)
        
        # Geri d√∂nme butonu
        back_button = QPushButton('‚Üê')
        back_button.setFixedSize(50, 50)
        back_button.setStyleSheet("""
            QPushButton {
                color: white;
                font-size: 28px;
                border: none;
                background-color: transparent;
            }
            QPushButton:hover {
                background-color: #B33D15;
                border-radius: 25px;
            }
        """)
        back_button.clicked.connect(self.close)
        
        # Ba≈ülƒ±k etiketi
        title_label = QLabel('Gelir Tablosu Raporu')
        title_label.setStyleSheet('color: white; font-size: 28px; font-weight: bold;')
        
        # Rapor olu≈ütur butonu
        self.generate_report_button = QPushButton('üìÑ Rapor Olu≈ütur')
        self.generate_report_button.setStyleSheet("""
            QPushButton {
                background-color: white;
                color: #D94E1F;
                border: none;
                border-radius: 8px;
                padding: 8px 15px;
                font-size: 14px;
                font-weight: bold;
            }
            QPushButton:hover {
                background-color: #FFE0E0;
            }
        """)
        self.generate_report_button.clicked.connect(self.generate_report)
        
        # Kapatma butonu
        close_button = QPushButton('√ó')
        close_button.setFixedSize(60, 60)
        close_button.setStyleSheet("""
            QPushButton {
                color: white;
                font-size: 24px;
                border: none;
                background-color: transparent;
            }
            QPushButton:hover {
                background-color: #B33D15;
            }
        """)
        close_button.clicked.connect(self.close)
        
        title_layout.addWidget(back_button)
        title_layout.addWidget(title_label)
        title_layout.addStretch()
        title_layout.addWidget(self.generate_report_button)
        title_layout.addWidget(close_button)
        
        # Filtre b√∂l√ºm√º
        filter_widget = QWidget()
        filter_widget.setStyleSheet("""
            QWidget {
                background-color: white;
                border-radius: 10px;
                margin: 10px;
            }
            QLabel {
                font-size: 14px;
                font-weight: bold;
            }
            QDateEdit, QComboBox {
                padding: 5px;
                border: 2px solid #D94E1F;
                border-radius: 5px;
                min-width: 150px;
            }
        """)
        filter_layout = QHBoxLayout(filter_widget)
        
        # Ba≈ülangƒ±√ß tarihi
        start_date_label = QLabel('Ba≈ülangƒ±√ß Tarihi:')
        self.start_date = QDateEdit()
        self.start_date.setDate(QDate.currentDate().addMonths(-1))
        
        # Biti≈ü tarihi
        end_date_label = QLabel('Biti≈ü Tarihi:')
        self.end_date = QDateEdit()
        self.end_date.setDate(QDate.currentDate())
        
        # Rapor t√ºr√º
        report_type_label = QLabel('Rapor T√ºr√º:')
        self.report_type = QComboBox()
        self.report_type.addItems(['Aylƒ±k', '√ú√ß Aylƒ±k', 'Yƒ±llƒ±k'])
        
        filter_layout.addWidget(start_date_label)
        filter_layout.addWidget(self.start_date)
        filter_layout.addWidget(end_date_label)
        filter_layout.addWidget(self.end_date)
        filter_layout.addWidget(report_type_label)
        filter_layout.addWidget(self.report_type)
        filter_layout.addStretch()
        
        # Tablo
        self.table = QTableWidget()
        self.table.setColumnCount(4)
        self.table.setHorizontalHeaderLabels(['Kalem', '√ñnceki D√∂nem', 'Cari D√∂nem', 'Deƒüi≈üim %'])
        self.table.setStyleSheet("""
            QTableWidget {
                background-color: white;
                border: none;
                gridline-color: #FFE0E0;
            }
            QHeaderView::section {
                background-color: #D94E1F;
                color: white;
                padding: 8px;
                border: none;
                font-size: 14px;
                font-weight: bold;
            }
            QTableWidget::item {
                padding: 8px;
                font-size: 14px;
            }
        """)
        
        # Tablo s√ºtunlarƒ±nƒ± otomatik geni≈ület
        header = self.table.horizontalHeader()
        for i in range(4):
            header.setSectionResizeMode(i, QHeaderView.Stretch)
        
        # Widget'larƒ± ana layout'a ekle
        layout.addWidget(title_bar)
        layout.addWidget(filter_widget)
        layout.addWidget(self.table)
        
        self.add_sample_data()
        
    def add_sample_data(self):
        items = [
            ('Hasƒ±lat', '1,000,000.00 ‚Ç∫', '1,200,000.00 ‚Ç∫', '+20.00%'),
            ('Satƒ±≈ülarƒ±n Maliyeti (-)', '600,000.00 ‚Ç∫', '700,000.00 ‚Ç∫', '+16.67%'),
            ('BR√úT KAR/ZARAR', '400,000.00 ‚Ç∫', '500,000.00 ‚Ç∫', '+25.00%'),
            ('Faaliyet Giderleri (-)', '200,000.00 ‚Ç∫', '250,000.00 ‚Ç∫', '+25.00%'),
            ('FAALƒ∞YET KARI/ZARARI', '200,000.00 ‚Ç∫', '250,000.00 ‚Ç∫', '+25.00%'),
            ('Finansman Gelirleri', '50,000.00 ‚Ç∫', '60,000.00 ‚Ç∫', '+20.00%'),
            ('Finansman Giderleri (-)', '30,000.00 ‚Ç∫', '35,000.00 ‚Ç∫', '+16.67%'),
            ('D√ñNEM NET KARI/ZARARI', '220,000.00 ‚Ç∫', '275,000.00 ‚Ç∫', '+25.00%')
        ]
        
        self.table.setRowCount(len(items))
        for row, (item, prev, curr, change) in enumerate(items):
            self.table.setItem(row, 0, QTableWidgetItem(item))
            self.table.setItem(row, 1, QTableWidgetItem(prev))
            self.table.setItem(row, 2, QTableWidgetItem(curr))
            self.table.setItem(row, 3, QTableWidgetItem(change))
            
            # Ana ba≈ülƒ±klarƒ± kalƒ±n yap
            if item in ['BR√úT KAR/ZARAR', 'FAALƒ∞YET KARI/ZARARI', 'D√ñNEM NET KARI/ZARARI']:
                for col in range(4):
                    self.table.item(row, col).setFont(QFont('Arial', 10, QFont.Bold))
    
    def generate_report(self):
        try:
            # PDF dosya adƒ±nƒ± olu≈ütur
            start_date = self.start_date.date().toString('dd.MM.yyyy')
            end_date = self.end_date.date().toString('dd.MM.yyyy')
            filename = f'Gelir_Tablosu_Raporu_{start_date}-{end_date}.pdf'
            
            # PDF yazƒ±cƒ± olu≈ütur
            writer = QPdfWriter(filename)
            writer.setPageSize(QPdfWriter.A4)
            
            # Painter olu≈ütur
            painter = QPainter()
            painter.begin(writer)
            
            # HTML i√ßeriƒüi olu≈ütur
            html = f"""
            <html>
            <head>
                <style>
                    table {{ border-collapse: collapse; width: 100%; }}
                    th, td {{ border: 1px solid black; padding: 8px; text-align: left; }}
                    th {{ background-color: #D94E1F; color: white; }}
                </style>
            </head>
            <body>
                <h1 style="text-align: center;">Gelir Tablosu Raporu</h1>
                <p>D√∂nem: {start_date} - {end_date}</p>
                <p>Rapor T√ºr√º: {self.report_type.currentText()}</p>
                <table>
                    <tr>
                        <th>Kalem</th>
                        <th>√ñnceki D√∂nem</th>
                        <th>Cari D√∂nem</th>
                        <th>Deƒüi≈üim %</th>
                    </tr>
            """
            
            # Tablo verilerini ekle
            for row in range(self.table.rowCount()):
                html += "<tr>"
                for col in range(self.table.columnCount()):
                    item = self.table.item(row, col)
                    if item:
                        html += f"<td>{item.text()}</td>"
                    else:
                        html += "<td></td>"
                html += "</tr>"
            
            html += """
                </table>
            </body>
            </html>
            """
            
            # HTML'i PDF'e d√∂n√º≈üt√ºr
            document = QTextDocument()
            document.setHtml(html)
            document.setPageSize(writer.pageRect().size())
            document.drawContents(painter)
            
            painter.end()
            
            QMessageBox.information(
                self,
                'Ba≈üarƒ±lƒ±',
                f'Rapor ba≈üarƒ±yla olu≈üturuldu!\nDosya: {filename}',
                QMessageBox.Ok
            )
            
            # PDF'i a√ß
            os.startfile(filename)
            
        except Exception as e:
            QMessageBox.warning(
                self,
                'Hata',
                f'Rapor olu≈üturulurken bir hata olu≈ütu:\n{str(e)}',
                QMessageBox.Ok
            )